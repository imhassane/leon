@startuml
package "Cache"{
  entity Cache {
     type: CacheType
     size: int
     level: int
     replacementPolicy: CacheReplacementPolicy
  }

  enum CacheType {
     DATA_CACHE
     INSTRUCTION
  }

  enum CacheReplacementPolicy {
     LRU
     LRR
  }
}

package "Input Output"{
  entity IO {
     type: string
     mode: IOMode
     debit: int
  }

  enum IOType {
     PCI
  }

  enum IOMode {
      64
      32
  }
}

entity FPU {}

package "Memory"{
  entity Memory {
     type: MemoryType
  }

  enum MemoryType {
     DRAM
     SRAM
  }
}

entity PredictionUnit {}





interface Core {
    caches: List<Cache>
    fpu: FPU
    frequency: int
    memory: Memory
    io: IO
}

Core -- Cache
Core -- FPU
Core -- Memory
Core -- IO

class Leon1 extends Core {}

class Leon1FT extends Leon1 {}

class Leon2 extends Leon1 {}

class Leon2FT extends Leon2 {}

class Leon3 extends Core {
   predictionUnit: PredictionUnit
}

Leon3 -- PredictionUnit

class Leon3FT extends Leon3 {}

class Leon4 extends Leon3 {}

class Leon4FT extends Leon4 {}

class Leon5 extends Leon4 {}

class Leon5FT extends Leon5 {}
@enduml
